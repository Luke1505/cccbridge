name: Build and Release

on:
  release:
    types: [published]

jobs:
  Build:
    runs-on: ubuntu-latest
    
    outputs:
      ForgeFile: ${{ steps.files.outputs.ForgeFile }}
      FabricFile: ${{ steps.files.outputs.FabricFile }}
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up JDK
      uses: actions/setup-java@v2
      with:
        java-version: 17
        distribution: 'temurin'
    
    - name: Build Forge
      run: |
        cd ./forge
        chmod 777 gradlew
        ./gradlew build

    - name: Build Fabric
      run: |
        cd ./fabric
        chmod 777 gradlew
        ./gradlew build
        
    - name: Get Filenames
      id: files
      run: |
        set -x
        cd ./forge
        MC_VERSION=$(grep -Po 'mc_version=\K.*$' gradle.properties)
        MOD_VERSION=$(grep -Po 'mod_version=\K.*$' gradle.properties)
        MODLOADER=$(grep -Po 'modloader=\K.*$' gradle.properties)
        VERSION=$MC_VERSION-$MOD_VERSION-$MODLOADER
        echo "ForgeFile=cccbridge-$VERSION.jar" >> $GITHUB_OUTPUT
        cd ../fabric
        MC_VERSIONFA=$(grep -Po 'minecraft_version=\K.*$' gradle.properties)
        MOD_VERSIONFA=$(grep -Po 'mod_version = \K.*$' gradle.properties)
        MODLOADERFA=$(grep -Po 'modloader = \K.*$' gradle.properties)
        VERSIONFA=$MC_VERSIONFA-$MOD_VERSIONFA-$MODLOADERFA
        echo "FabricFile=cccbridge-$VERSIONFA.jar" >> $GITHUB_OUTPUT
      
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v3.1.2
      with:
        # Artifact name
        name: JarFiles
        path:  |
            ./forge/build/libs/${{ env.ForgeFile }}
            ./fabric/build/libs/${{ env.FabricFile }}

  Release:
    needs: Build
    runs-on: ubuntu-latest

    steps:
    - name: Get Filenames
      run: |
        ForgeFile=${{ needs.Build.outputs.ForgeFile }}
        FabricFile=${{ needs.Build.outputs.FabricFile }}
      env:
        ForgeFile: ${{ needs.Build.outputs.ForgeFile }}
        FabricFile: ${{ needs.Build.outputs.FabricFile }}
    
    - name: Create release directory
      run: mkdir -p release
 
    - name: Download files
      uses: actions/download-artifact@v3.0.2
      with:
        name: JarFiles
        path: release

    - name: Upload Forge Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: https://uploads.github.com/repos/${{ github.repository }}/releases/${{ github.event.release.id }}/assets{?name,label}
        asset_path: ./release/${{ env.ForgeFile }}
        asset_name: ${{ env.ForgeFile }}
        asset_content_type: application/java-archive
        
    - name: Upload Fabric Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: https://uploads.github.com/repos/${{ github.repository }}/releases/${{ github.event.release.id }}/assets{?name,label}
        asset_path: ./release/${{ env.FabricFile }}
        asset_name: ${{ env.FabricFile }}
        asset_content_type: application/java-archive
