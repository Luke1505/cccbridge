name: Build and Release

on:
  release:
    types: [published]

jobs:
  Build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up JDK
      uses: actions/setup-java@v2
      with:
        java-version: 17
        distribution: 'temurin'
    
    - name: Build Forge
      run: |
        cd ./forge
        chmod 777 gradlew
        ./gradlew build
        ls
        cd ./build
        ls
        cd ./libs
        ls

    - name: Build Fabric
      run: |
        cd ./fabric
        chmod 777 gradlew
        ./gradlew build
        ls
        cd ./build
        ls
        cd ./libs
        ls
        
    - name: Get File Names
      run: |
        cd ./forge
        ls
        chmod 777 build.gradle
        VERSION=$(grep -Po "version = '\K[^']*" build.gradle)
        echo ${VERSION}
        export ForgeFile=cccbridge-$VERSION.jar
        cd ../fabric
        ls
        chmod 777 build.gradle
        VERSIONFA=$(grep -Po "version = '\K[^']*" build.gradle)
        echo ${VERSIONFA}
        export FabricFile=cccbridge-$VERSIONFA.jar
        
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v3.1.2
      with:
        # Artifact name
        name: JarFiles
        path:  |
            ./forge/build/libs/${{ env.ForgeFile }}
            ./fabric/build/libs/${{ env.FabricFile }}

  Release:
    needs: Build
    runs-on: ubuntu-latest

    steps:
    - name: Create release directory
      run: mkdir -p release
 
    - name: Download files
      uses: actions/download-artifact@v3.0.2
      with:
        name: JarFiles
        path: release

    - name: Upload Forge Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: https://uploads.github.com/repos/${{ github.repository }}/releases/${{ github.event.release.id }}/assets{?name,label}
        asset_path: ./release/${{ env.ForgeFile }}
        asset_name: ${{ env.ForgeFile }}
        asset_content_type: application/java-archive
        
    - name: Upload Fabric Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: https://uploads.github.com/repos/${{ github.repository }}/releases/${{ github.event.release.id }}/assets{?name,label}
        asset_path: ./release/${{ env.FabricFile }}
        asset_name: ${{ env.FabricFile }}
        asset_content_type: application/java-archive
