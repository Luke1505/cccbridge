name: Build and Release

on:
  release:
    types: [published]

jobs:
  BuildAndRelease:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        branch:
          - '1.18.2'
          - ${{ github.ref }}
        version:
          - '1.18.2'
          - '1.19.2'

    outputs:
      ForgeFile: ${{ steps.files.outputs.ForgeFile }}
      Version: ${{ steps.files.outputs.Version }}
      McVersion: S${{ steps.files.outputs.McVersion }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: ${{ matrix.branch }}

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: 'temurin'

      - name: Build Forge
        run: |
          cd ./forge
          chmod 777 gradlew
          ./gradlew build

      - name: Get Forge Filenames
        id: files
        run: |
          cd ./forge
          MC_VERSION=$(grep -Po 'mc_version=\K.*$' gradle.properties)
          MOD_VERSION=$(grep -Po 'mod_version=\K.*$' gradle.properties)
          MODLOADER=$(grep -Po 'modloader=\K.*$' gradle.properties)
          VERSION=$MC_VERSION-$MOD_VERSION-$MODLOADER
          echo "Version=$MOD_VERSION" >> $GITHUB_ENV
          echo "McVersion=$MC_VERSION" >> $GITHUB_ENV
          echo "ForgeFile=cccbridge-$VERSION.jar" >> $GITHUB_ENV

      - name: Upload Forge Artifact
        uses: actions/upload-artifact@v3.1.2
        with:
          name: ForgeJar_${{ matrix.version }}
          path: |
            ./forge/build/libs/${{ env.ForgeFile }}

  Release:
    if: startsWith(github.ref, 'refs/tags/')
    needs: BuildAndRelease
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download Forge Artifacts
        uses: actions/download-artifact@v3.0.2
        with:
          name: ForgeJar_${{ matrix.version }}
          path: release/${{ matrix.version }}

      - name: Upload Forge Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: https://uploads.github.com/repos/${{ github.repository }}/releases/${{ github.event.release.id }}/assets{?name,label}
          asset_path: ./release/${{ matrix.version }}/${{ needs.BuildAndRelease.outputs.ForgeFile }}
          asset_name: ${{ needs.BuildAndRelease.outputs.ForgeFile }}
          asset_content_type: application/java-archive
